<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MauiVoiceParrotingApp.MainPage"
             xmlns:converter="clr-namespace:MauiVoiceParrotingApp.Converters">

    <ContentPage.Resources>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="24"/>
        </Style>

        <ResourceDictionary x:Name="MyDictionary">
            <Color x:Key="RecorderBusyColor">Red</Color>
            <Color x:Key="PlayerBusyColor">Green</Color>
            <Color x:Key="ReadyColor">Gray</Color>
        </ResourceDictionary>

        <converter:BusyStateToIndicatorColorConverter x:Key="recorderStateToColor" 
                                                      BusyColor="{StaticResource RecorderBusyColor}"
                                                      ReadyColor="{StaticResource ReadyColor}"/>
        <converter:BusyStateToIndicatorColorConverter x:Key="playerStateToColor" 
                                                      BusyColor="{StaticResource PlayerBusyColor}"
                                                      ReadyColor="{StaticResource ReadyColor}"/>
    </ContentPage.Resources>
    
    <VerticalStackLayout VerticalOptions="Center" 
                         HorizontalOptions="Center"
                         Spacing="50">
        
        <Button x:Name="StartButton" 
                Text="Start"
                FontSize="45"
                Clicked="StartButton_Clicked"
                IsEnabled="{Binding IsAvailable}"/>

        <HorizontalStackLayout VerticalOptions="Center" Spacing="30">
            
            <Label Text="Delay Time" VerticalOptions="Center"/>
            <Label x:Name="DelayValue" 
                   Text="{Binding Source={x:Reference DelayTimeSlider}, Path=Value,
                                    StringFormat='{0:F2} sec'}"/>

            <Slider x:Name="DelayTimeSlider" 
                    Minimum="0"
                    Maximum="5"
                    Value="1"
                    WidthRequest="100"/>

        </HorizontalStackLayout>


        <!--<HorizontalStackLayout Margin="50" Spacing="40"
                               HorizontalOptions="Center">
            <Button x:Name="RecordButton" Text="Record" Clicked="RecordButton_Clicked"/>
            <Button x:Name="PlayButton" Text="Play" Clicked="PlayButton_Clicked"/>
        </HorizontalStackLayout>-->

        <!--<Switch x:Name="TestSwitch"/>-->

        <Grid x:Name="Indicators" 
                      HorizontalOptions="Center"
                      RowDefinitions="*, *" ColumnDefinitions="*, Auto"
                      RowSpacing="10" ColumnSpacing="20">

            <Label Text="REC" TextColor="{Binding IsRecBusy, 
                                                    Converter={StaticResource recorderStateToColor}}"
                   VerticalTextAlignment="Center"
                   Grid.Column="0" Grid.Row="0"/>

            <ProgressBar x:Name="MyRecProgress" WidthRequest="200" HeightRequest="20"
                         ProgressColor="{StaticResource RecorderBusyColor}"
                         Progress="{Binding RecPosition}"
                         Grid.Column="1" Grid.Row="0"/>


            <Label Text="PLAY" TextColor="{Binding IsPlayBusy, 
                                                    Converter={StaticResource playerStateToColor}}"
                   VerticalTextAlignment="Center"
                   Grid.Column="0" Grid.Row="1"/>

            <ProgressBar x:Name="MyPlayProgress" WidthRequest="200" HeightRequest="20"
                         ProgressColor="{StaticResource PlayerBusyColor}"
                         Progress="{Binding PlayPosition}"
                         Grid.Column="1" Grid.Row="1"/>

        </Grid>

        <Button Text="Cancel" Clicked="CancelButton_Clicked"
                IsEnabled="{Binding IsRunning}"/>

        <VerticalStackLayout IsVisible="{OnPlatform True, Android=False}">
            <VerticalStackLayout.Resources>
                <Style TargetType="Label">
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="VerticalTextAlignment" Value="Center"/>
                </Style>
            </VerticalStackLayout.Resources>
            
        <Label Text="Device selected" Margin="10"
               HorizontalOptions="Center"/>

        <Grid Margin="0"
              HorizontalOptions="Center"
              RowDefinitions="*, *" ColumnDefinitions="*, Auto"
              RowSpacing="10" ColumnSpacing="20">

            <Label Text="Mic"
                   Grid.Column="0" Grid.Row="0"/>
            <Picker x:Name="RecorderPicker"
                    IsEnabled="{Binding IsAvailable}"
                    Grid.Column="1" Grid.Row="0"/>

            <Label Text="Speaker"
                   Grid.Column="0" Grid.Row="1"/>
            <Picker x:Name="PlayerPicker"
                    IsEnabled="{Binding IsAvailable}"
                    Grid.Column="1" Grid.Row="1"/>

        </Grid>

        </VerticalStackLayout>
        
    </VerticalStackLayout>

</ContentPage>
